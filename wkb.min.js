((function(){var a;typeof exports!="undefined"?a=exports:a=this.wkb={},a.VERSION="0.0.1"})).call(this),wkb.Type={k:{wkbPoint:1,wkbLineString:2,wkbPolygon:3,wkbMultiPoint:4,wkbMultiLineString:5,wkbMultiPolygon:6,wkbGeometryCollection:7,wkbUnknown:0,wkbLinearRing:101},b:{Int8:1,Uint8:1,Int16:2,Uint16:2,Int32:4,Uint32:4,Float32:4,Float64:8},toString:function(a){var b=Object.keys(this.k).reduce(function(a,b){return a[wkb.Type.k[b]]=b,a},[]);return b[a]}},wkb.Utils=function(){var a=function(){};return{mixin:function(a){var b=[].slice.call(arguments,1);return b.forEach(function(b){for(var c in b)b[c]!==void 0&&(a[c]=b[c])}),a},extend:function(a){var b=inherits(this,a);return b.extend=this.extend,b},debug:!0,assert:function(a,b){if(!a&&this.debug)throw new Error(b)},inherits:function(b,c){var d;return c.hasOwnProperty("constructor")?d=c.constructor:d=function(){return b.apply(this,arguments)},wkb.Utils.mixin(d,b),a.prototype=b.prototype,d.prototype=new a,d.protoype.constructor=d.constructor,wkb.Utils.mixin(d.prototype,c),d.__super__=b.prototype,d}}}(),wkb.Factory=function(a){this.data=new DataView(a)},wkb.Utils.mixin(wkb.Factory.prototype,wkb.Mixins.Reader,{parseWKT:function(a){return this._dispatch(a,"fromWKT")},parseWKB:function(a){return this._dispatch(a,"fromWKB")},_dispatch:function(a,b){this.advance(this.UINT8);var c,d=this._getU32();switch(d){case wkb.Type.k.wkbPoint:return wkb.Point[b];case wkb.Type.k.wkbLineString:return wkb.LineString[b];case wkb.Type.k.wkbPolygon:return wkb.Type.k.Polygon[b];case wkb.Type.k.wkbMultiLineString:return wkb.MultiLineString[b];case wkb.Type.k.wkbMultiPolygon:return wkb.MultiPolygon[b];case wkb.Type.k.wkbGeometryCollection:return wkb.GeometryCollection[b];default:wkb.Utils.assert(!1,"Unknown geometry type")}}}),wkb.Geometry=function(a){this.data=a,this._parse()},wkb.Utils.mixin(wkb.Geometry.prototype,wkb.Utils.Reader,{type:wkb.Types.k.wkbUnknown,parse:function(){wkb.Utils.assert(!1,"Geometry is an abstract type.")}}),wkb.Geometry.extend=wkb.Utils.extend,wkb.Utils.mixin(wkb.Geometry,{registerParser:function(a,b){var c;switch(a){case"WKB":c=function(){wkb.Utils.assert(wkb.root.DataView&&wkb.root.ArrayBuffer,"Can't parse WKB without DataView and ArrayBuffer"),b.call(this,arguments)};break;case"JSON":c=function(){wkb.Utils.assert(wkb.root.JSON,"Can't parse GeoJSON without json support"),b.call(this,arguments)};break;default:c=b}this["parse"+a]=function(a){var b=new this.constructor(a);return c(b),b._parse(),b}}}),wkb.Polygon.registerParser("WKB",function(a){}),wkb.Polygon.registerParser("WKT",function(a){}),wkb.Polygon.registerParser("JSON",function(a){}),wkb.LinearRing=wkb.Geometry.extend({constructor:function(a,b){wkb.Geometry.call(this,a),this.endian=function(){return b},this.points=[]},type:wkb.k.LinearRing,numPoints:function(){return this.points.length}}),wkb.Polygon.registerParser("WKB",function(a){wkb.Utils.mixin(a,{numPoints:function(){return this.data.getUInt32(wkt.Type.b.Int8,this.endian())},byteOffset:function(){return wkt.Type.b.Int8+wkt.Type.b.UInt32+this.numPoints()*2*wkt.Type.b.Float32-wkt.Type.b.Int8},_parse:function(){}})}),wkb.LinearRing=wkb.Geometry.extend({type:wkb.k.LinearRing}),wkb.Polygon=wkb.Geometry.extend({constructor:function(){wkb.Geometry.call(this,arguments),this.rings=[]},type:wkb.Types.k.wkbPolygon,numRings:function(){return this.rings.length}}),wkb.Polygon.registerParser("WKB",function(a){wkb.Utils.mixin(a,{endian:function(){return!!this.data.getUInt8(0)},numRings:function(){return this.data.getUInt32(wkt.Type.b.Int8+wkt.Type.b.UInt32-wkt.Type.b.Int8,this.endian())},byteOffset:function(){return wkt.Type.b.Int8+wkt.Type.b.UInt32*2-wkt.Type.b.Int8},_parse:function(){wkb.Utils.assert(this.data.getUInt8(1)==this.type,"Wrong type for Polygon");var a=this.byteOffset;for(var b=0;b<this.numRings();b++){var c=new LineString(new DataView(this.data.buffer,a));this.rings.push(c),a=c.byteOffset()+a}}})}),wkb.Polygon.registerParser("WKT",function(a){wkb.Utils.mixin(instance,{rings:function(){}})}),wkb.Polygon.registerParser("JSON",function(a){wkb.Utils.mixin(instance,{rings:function(){}})}),wkb.Mixins.Reader={offset:0,advance:function(a){return this.offset=this.offset+a},rewind:function(a){return this.advance(a*-1)},reset:function(){return this.rewind(this.offset)},_getU32:function(){var a=this.dv.getUint32(this.offset);return this.advance(this.UINT32),a}};