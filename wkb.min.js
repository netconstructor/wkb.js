((function(){var a;typeof exports!="undefined"?a=exports:a=this.wkb={},a.VERSION="0.0.1"})).call(this),wkb.Type={k:{wkbPoint:1,wkbLineString:2,wkbPolygon:3,wkbMultiPoint:4,wkbMultiLineString:5,wkbMultiPolygon:6,wkbGeometryCollection:7,wkbUnknown:0,wkbLinearRing:101},b:{Int8:1,Uint8:1,Int16:2,Uint16:2,Int32:4,Uint32:4,Float32:4,Float64:8},toString:function(a){var b=Object.keys(this.k).reduce(function(a,b){return a[wkb.Type.k[b]]=b,a},[]);return b[a]}},wkb.Utils=function(){var a=function(){};return{mixin:function(a){var b=[].slice.call(arguments,1);return b.forEach(function(b){for(var c in b)b[c]!==void 0&&(a[c]=b[c])}),a},extend:function(a){var b=wkb.Utils.inherits(this,a);return b.extend=this.extend,b},debug:!0,assert:function(a,b){if(!a&&this.debug)throw new Error(b)},inherits:function(b,c){var d;return c.hasOwnProperty("constructor")?d=c.constructor:d=function(){return b.apply(this,arguments)},wkb.Utils.mixin(d,b),a.prototype=b.prototype,d.prototype=new a,d.prototype.constructor=d,wkb.Utils.mixin(d.prototype,c),d.__super__=b.prototype,d}}}(),wkb.debug=function(a){wkb.Utils.debug=!!a},wkb.Factory=function(){},wkb.Utils.mixin(wkb.Factory.prototype,{parseWKT:function(a){return this._dispatch(a,"parseWKT")},parseWKB:function(a){return this._dispatch(a,"parseWKB")},_dispatch:function(a,b){var c=a.getUint32(1);switch(c){case wkb.Type.k.wkbPoint:return wkb.Point[b](a);case wkb.Type.k.wkbLineString:return wkb.LineString[b](a);case wkb.Type.k.wkbPolygon:return wkb.Type.k.Polygon[b](a);case wkb.Type.k.wkbMultiLineString:return wkb.MultiLineString[b](a);case wkb.Type.k.wkbMultiPolygon:return wkb.MultiPolygon[b](a);case wkb.Type.k.wkbGeometryCollection:return wkb.GeometryCollection[b](a);default:wkb.Utils.assert(!1,"Unknown geometry type")}}}),wkb.Geometry=function(a){this.data=a,this.geometries=[]},wkb.Utils.mixin(wkb.Geometry.prototype,{type:wkb.Type.k.wkbUnknown,_child:null,toString:function(){return"<"+wkb.Type.toString(this.type)+(this.geometries&&this.geometries.length>0?" "+this.geometries.map(function(a){return a.toString()}).join(", "):"")+">"}}),wkb.Geometry.extend=wkb.Utils.extend,wkb.Utils.mixin(wkb.Geometry,{registerParser:function(a,b){var c;switch(a){case"WKB":c=function(){wkb.Utils.assert(DataView&&ArrayBuffer,"Can't parse WKB without DataView and ArrayBuffer"),b.apply(this,arguments)};break;case"JSON":c=function(){wkb.Utils.assert(wkb.root.JSON,"Can't parse GeoJSON without json support"),b.apply(this,arguments)};break;default:c=b}this["parse"+a]=function(a){var b=new this.prototype.constructor(a);return c(b),b.parse(),b}}}),wkb.Geometry.registerParser("WKB",function(a){wkb.Utils.mixin(a,{endian:function(){return!!this.data.getUint8(0)},numGeometries:function(){return this.data.getUint32(wkb.Type.b.Int8+wkb.Type.b.Uint32)},byteOffset:function(){return wkb.Type.b.Int8+wkb.Type.b.Uint32*2},byteLength:function(){return this.byteOffset()+this.geometries.reduce(function(a,b){return b.byteLength()+a},0)},parse:function(){wkb.Utils.assert(this.data.getUint32(1)!==wkb.Type.k.wkbUnknown,"Geometry is an abstract type"),wkb.Utils.assert(this.data.getUint32(1)===this.type,"Wrong type for "+this);var a=this.byteOffset();for(var b=0;b<this.numGeometries();b++){var c=this._child.parseWKB(new DataView(this.data.buffer,this.data.byteOffset+a));this.geometries.push(c),a=c.byteLength()+a}}})}),wkb.Geometry.registerParser("WKT",function(a){}),wkb.Geometry.registerParser("JSON",function(a){}),wkb.Point=wkb.Geometry.extend({type:wkb.Type.k.wkbPoint,toString:function(){return"<"+wkb.Type.toString(this.type)+" x="+this.getX()+" y="+this.getY()}}),wkb.Point.registerParser("WKB",function(a){wkb.Utils.mixin(a,{parse:function(){},getX:function(){return this.data.getFloat32(1)},getY:function(){return this.data.getFloat32(2)}})}),wkb.LinearRing=wkb.Geometry.extend({type:wkb.Type.k.wkbLinearRing,_child:wkb.Point}),wkb.LinearRing.registerParser("WKB",function(a){wkb.Utils.mixin(a,{numGeometries:function(){return this.data.getUint32(0)},byteLength:function(){return wkb.Type.b.Uint32+this.numGeometries()*2*wkb.Type.b.Float64},pointAt:function(a){return this.points(a)},parse:function(){var a=this.numGeometries();for(var b=0;b<a*2-1;b+=2)this.geometries.push(this._child.parseWKB(new DataView(this.data.buffer,b*wkb.Type.b.Float64)))}})}),wkb.LineString=wkb.Geometry.extend({type:wkb.Type.k.LineString,_child:wkb.Point}),wkb.Polygon=wkb.Geometry.extend({type:wkb.Type.k.wkbPolygon,_child:wkb.LinearRing}),wkb.MultiPolygon=wkb.GeometryCollection.extend({type:wkb.Type.k.wkbMultiPolygon,_child:wkb.Polygon}),wkb.GeometryCollection=wkb.Geometry.extend({type:wkb.Type.k.GeometryCollection});